{"version":3,"sources":["action/login/loginAction.js","component/header/Header.js","reducer/home/homeReducer.js","reducer/login/loginReducer.js","reducer/reducer.js","general/component/Loading.js","routes/Routes.js","routes/MainRoute.js","general/util/constant.js","saga/homeSaga/homeSaga.js","saga/loginSaga/loginSaga.js","saga/allSagas.js","App.js","serviceWorker.js","index.js","action/home/homeAction.js"],"names":["__webpack_require__","d","__webpack_exports__","SET_LOGIN","GET_LOGIN_DETAIL","SET_ERROR","SET_LOADER","setLogin","_ref","login","username","type","payload","getLoginDetail","_ref2","password","setError","message","setLoader","loader","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","_action_login_loginAction__WEBPACK_IMPORTED_MODULE_2__","connect","auth","mapDispatchToProps","props","a","createElement","className","value","onClick","sessionStorage","clear","initialState","searchList","selectedItem","searchCounter","count","homeReducer","state","arguments","length","undefined","action","SET_SEARCH_LIST","Object","objectSpread2","list","GET_SEARCH_LIST","SET_COUNT","RESET_COUNT","error","SET_SELECTED_ITEM","item","SET_HOME_ERROR","loginReducer","combineReducers","home","Loading","react_default","withConnect","dispatch","compose","memo","Component","component","rest","objectWithoutProperties","react_router","assign","render","location","pathname","includes","to","from","HomeRoute","Loadable","e","then","bind","loading","LoginRoute","MainRoute","react_router_dom","Header","Routes","loginRequired","path","loginPage","PLANET_URL","PEOPLE_URL","getSearchList","watchHomeSaga","_action$payload","name","countFunction","url","_yield$fetch$then","results","regenerator_default","wrap","_context","prev","next","concat","getItem","put","homeAction","abrupt","sent","fetch","response","json","setSearchList","setCount","t0","stop","_marked","_context2","debounce","_marked2","watchLoginSaga","loginAction","JSON","stringify","setItem","birth_year","push","loginSaga_marked","takeLatest","loginSaga_marked2","allSagas","homeSaga","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","map","saga","run","App","es","routes_MainRoute","Boolean","window","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","resetCount","setSelectedItem"],"mappings":"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","file":"static/js/main.620b4a33.chunk.js","sourcesContent":["export const SET_LOGIN = \"SET_LOGIN\";\nexport const GET_LOGIN_DETAIL = \"GET_LOGIN_DETAIL\";\nexport const SET_ERROR = \"SET_ERROR\";\nexport const SET_LOADER = \"SET_LOADER\";\n\nconst setLogin = ({ login, username }) => ({\n  type: SET_LOGIN,\n  payload: { login, username },\n});\n\nconst getLoginDetail = ({ username, password }) => ({\n  type: GET_LOGIN_DETAIL,\n  payload: { password, username },\n});\n\nconst setError = (message) => ({\n  type: SET_ERROR,\n  payload: { message },\n});\n\nconst setLoader = (loader) => ({\n  type: SET_LOADER,\n  payload: { loader },\n});\n\nexport default { setLogin, getLoginDetail, setError, setLoader };\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport mapDispatchToProps from \"./../../action/login/loginAction\";\n\nimport \"./header.scss\";\n// import { useHistory } from \"react-router-dom\";\n\n// import PropTypes from 'prop-types';\n// import styled from 'styled-components';\n\nconst Header = props => {\n  // const history = useHistory();\n  const { login, setLogin } = props;\n  if (!login) {\n    return null;\n  }\n  return (\n    <header className=\"container header\">\n      <div className=\"row\">\n        <div className=\"col-sm-2\" />\n        <div className=\"col-sm-6\">\n          <h3>Star Wars</h3>\n        </div>\n        <div className=\"col-sm-4 logoutBtn\">\n          <input\n            type=\"button\"\n            value={\"Logout\"}\n            className=\"btn btn-primary\"\n            onClick={() => {\n              sessionStorage.clear();\n              // history.push(\"/login\");\n              setLogin({ login: false, username: \"\" });\n            }}\n          />\n        </div>\n      </div>\n    </header>\n  );\n};\n\nconst mapStateToProps = ({ auth }) => ({\n  login: auth.login\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import {\n  SET_SEARCH_LIST,\n  GET_SEARCH_LIST,\n  SET_SELECTED_ITEM,\n  SET_HOME_ERROR,\n  SET_COUNT,\n  RESET_COUNT\n} from \"./../../action/home/homeAction\";\n\nconst initialState = {\n  searchList: [],\n  loader: false,\n  selectedItem: {},\n  searchCounter: [],\n  count: 0\n};\n\nfunction homeReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_SEARCH_LIST:\n      return {\n        ...state,\n        searchList: action.payload.list,\n        loader: false\n      };\n    case GET_SEARCH_LIST:\n      return {\n        ...state,\n        loader: true\n      };\n    case SET_COUNT:\n      return {\n        ...state,\n\n        count: action.payload.count + 1\n      };\n    case RESET_COUNT:\n      return {\n        ...state,\n        error: false,\n        count: 0\n      };\n    case SET_SELECTED_ITEM:\n      return {\n        ...state,\n        selectedItem: action.payload.item\n      };\n    case SET_HOME_ERROR:\n      return {\n        ...state,\n        error: action.payload.message,\n        loader: false\n      };\n    default:\n      return state;\n  }\n}\n\nexport default homeReducer;\n","import {\n  SET_LOGIN,\n  SET_ERROR,\n  SET_LOADER,\n} from \"./../../action/login/loginAction\";\n\nconst initialState = {\n  login: sessionStorage[\"loggedInUser\"],\n  username: \"\",\n  error: \"\",\n  loader: false,\n};\n\nfunction loginReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_LOGIN:\n      return {\n        ...state,\n        login: action.payload.login,\n        username: action.payload.username,\n      };\n\n    case SET_ERROR:\n      return {\n        ...state,\n        error: action.payload.message,\n      };\n    case SET_LOADER:\n      return {\n        ...state,\n        loader: action.payload.loader,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default loginReducer;\n","import { combineReducers } from 'redux'\n\nimport homeReducer from './home/homeReducer'\nimport loginReducer from './login/loginReducer'\n\nexport default combineReducers({\n  home: homeReducer,\n  auth: loginReducer,\n})\n","import React from 'react'\n\nconst Loading = () => {\n  return (\n    <h1>\n      Loading...\n      </h1>\n  )\n}\n\nexport default Loading;\n","/**\n *\n * AuthWrapper\n *\n */\nimport React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nexport function AuthWrapper({ login, component: Component, ...rest }) {\n  let auth = login;\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        auth && props.location.pathname.includes(\"login\") ? (\n          <Redirect\n            to={{\n              pathname: \"/home\",\n              state: { from: props.location }\n            }}\n          />\n        ) : auth ? (\n          <Component {...props} />\n        ) : props.location.pathname.includes(\"login\") ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\nAuthWrapper.propTypes = {\n  dispatch: PropTypes.func.isRequired\n};\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch\n  };\n}\n\nconst mapStateToProps = ({ auth }) => ({\n  login: auth.login\n});\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nexport default compose(withConnect, memo)(AuthWrapper);\n","import React from \"react\";\nimport Loadable from \"react-loadable\";\nimport { Switch, Redirect, BrowserRouter } from \"react-router-dom\";\nimport Loading from \"../general/component/Loading\";\nimport Header from \"../component/header/Header\";\nimport AuthWrapper from \"./Routes\";\n\nconst HomeRoute = Loadable({\n  loader: () => import(\"../component/home/Home\"),\n  loading: Loading\n});\n\nconst LoginRoute = Loadable({\n  loader: () => import(\"../component/login/Login\"),\n  loading: Loading\n});\n\nfunction MainRoute() {\n  return (\n    <BrowserRouter>\n      <Header />\n      <Switch>\n        <AuthWrapper loginRequired={true} path=\"/home\" component={HomeRoute} />\n        <AuthWrapper\n          loginRequired={true}\n          loginPage={true}\n          path=\"/login\"\n          component={LoginRoute}\n        />\n        <Redirect to=\"/login\" />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default MainRoute;\n","export const PLANET_URL = \"https://swapi.dev/api/planets\";\nexport const PEOPLE_URL = \"https://swapi.dev/api/people\";\n","import { put, takeLatest, debounce } from \"redux-saga/effects\";\n\nimport homeAction from \"./../../action/home/homeAction\";\nimport { GET_SEARCH_LIST } from \"./../../action/home/homeAction\";\n\nimport { PLANET_URL } from \"./../../general/util/constant\";\n\nexport function* getSearchList(action) {\n  const { name, countFunction } = action.payload;\n  let { count } = action.payload;\n  const url = `${PLANET_URL}?search=${name}`;\n\n  try {\n    if (\n      count > 14 &&\n      countFunction > 0 &&\n      sessionStorage.getItem(\"loggedInUser\") != \"Luke Skywalker\"\n    ) {\n      return yield put(\n        homeAction.setError(\n          \"Max search count reached. Kindly Try After a minute.\"\n        )\n      );\n    }\n\n    const { results } = yield fetch(url).then((response) => response.json());\n    yield put(homeAction.setSearchList({ list: results }));\n    yield put(homeAction.setError(false));\n    yield put(homeAction.setCount(count));\n  } catch (e) {\n    yield put(homeAction.setError(\"Internal server error\"));\n  }\n}\n\nfunction* watchHomeSaga() {\n  yield debounce(500, GET_SEARCH_LIST, getSearchList);\n}\n\nexport default watchHomeSaga;\n","import { put, takeLatest } from \"redux-saga/effects\";\n\nimport loginAction, {\n  GET_LOGIN_DETAIL\n} from \"./../../action/login/loginAction\";\n\nimport { PEOPLE_URL } from \"./../../general/util/constant\";\nimport { push } from \"react-router-redux\";\n\nexport function* getLoginDetail(action) {\n  const { username, password } = action.payload;\n  yield put(loginAction.setLoader(true));\n  const url = `${PEOPLE_URL}?search=${username}`;\n  try {\n    const response = yield fetch(url).then(response => response.json());\n\n    JSON.stringify(sessionStorage.setItem(\"loggedInUser\", username));\n    const { results } = response;\n\n    if (\n      results.length === 1 &&\n      results[0].name === username &&\n      results[0].birth_year === password\n    ) {\n      yield put(push(\"/home\"));\n      yield put(loginAction.setLogin({ login: true, username: username }));\n      yield put(loginAction.setError(\"\"));\n    } else {\n      yield put(loginAction.setError(\"Wrong Username and password\"));\n    }\n  } catch (e) {\n    yield put(loginAction.setError(\"Internal server error\"));\n  }\n  yield put(loginAction.setLoader(false));\n}\n\nfunction* watchLoginSaga() {\n  yield takeLatest(GET_LOGIN_DETAIL, getLoginDetail);\n}\n\nexport default watchLoginSaga;\n","import homeSaga from './homeSaga/homeSaga'\nimport loginSaga from './loginSaga/loginSaga'\n\nexport default [homeSaga, loginSaga];\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"./reducer/reducer\";\nimport MainRoute from \"./routes/MainRoute\";\nimport allSagas from \"./saga/allSagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\n\nallSagas.map(saga => sagaMiddleware.run(saga));\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <MainRoute />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const GET_SEARCH_LIST = \"GET_SEARCH_LIST\";\nexport const SET_SEARCH_LIST = \"SET_SEARCH_LIST\";\nexport const SET_SELECTED_ITEM = \"SET_SELECTED_ITEM\";\nexport const SET_HOME_ERROR = \"SET_HOME_ERROR\";\nexport const SET_COUNT = \"SET_COUNT\";\nexport const RESET_COUNT = \"RESET_COUNT\";\n\nconst getSearchList = (name, count, countFunction) => ({\n  type: GET_SEARCH_LIST,\n  payload: { name, count, countFunction }\n});\n\nconst resetCount = () => ({\n  type: RESET_COUNT\n});\nconst setSearchList = ({ list }) => ({\n  type: SET_SEARCH_LIST,\n  payload: { list }\n});\n\nconst setSelectedItem = item => ({\n  type: SET_SELECTED_ITEM,\n  payload: { item }\n});\n\nconst setError = message => ({\n  type: SET_HOME_ERROR,\n  payload: { message }\n});\n\nconst setCount = count => ({\n  type: SET_COUNT,\n  payload: { count }\n});\n\nexport default {\n  getSearchList,\n  setCount,\n  resetCount,\n  setSearchList,\n  setSelectedItem,\n  setError\n};\n"],"sourceRoot":""}